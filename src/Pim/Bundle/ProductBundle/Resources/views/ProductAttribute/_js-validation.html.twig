// Get form name
var formName = 'pim_product_attribute_form';

$(function() {

    // Enable/disable scope and translatable fields according to unique field value
    $('#'+formName+'_unique').closest('.has-switch').on('switch-change', function (e, data) {
        if (data.value) {
            $('#'+formName+'_scopable').select2('val', 0).select2('disable');
            $('#'+formName+'_translatable').closest('.has-switch').bootstrapSwitch('setState', false);
            $('#'+formName+'_translatable').closest('.has-switch').bootstrapSwitch('setActive', false);
        } else {
            $('#'+formName+'_scopable').select2('enable');
            $('#'+formName+'_translatable').closest('.has-switch').bootstrapSwitch('setActive', true);
        }
    });

    var $optionList;

    function updateForm() {
        $.post(
           'preprocess',
            $('#' + formName).serialize(),
            function(data) {
                $('#' + formName).replaceWith(data);
                $('#' + formName + ' div.alert').remove();
                initializeForm();
            }
        );
    }

    function initializeForm() {
        $('#' + formName + ' .switch:not(.has-switch)').bootstrapSwitch();
        $('#' + formName + ' select').select2();
        $('#' + formName + ' input.multiselect').select2({ tags: $('#' + formName + ' input.multiselect').val() });
        initializeOptions();
        $('#pim_product_attribute_form_attributeType').select2().on('change', function() {
            updateForm();
        });

        $('select[id*=validationRule]').change(function() {
            if ($(this).val() == 'regexp') {
                $('input[id*=validationRegexp]').parent().parent().show();
            } else {
                $('input[id*=validationRegexp]').parent().parent().hide();
            }
        });
        $('select[id*=validationRule]').trigger('change');

        if ($('select[id*=availableLocales]').val()) {
            $('select[id*=availableLocales]').parent().parent().show();
            $('#limitLocales-switch').bootstrapSwitch('setState', true);
        }

        $('#limitLocales-switch').on('switch-change', function (e, data) {
            if (data.value) {
                $(this).parent().parent().next().show();
            } else {
                $('select[id*=availableLocales]').select2('val', '');
                $(this).parent().parent().next().hide();
            }
        });

        $('#pim_product_attribute_form_metricFamily').select2({ data: OroApp.measures.getMetricTypes() });
        $('#pim_product_attribute_form_metricFamily').change(function() {
            $('#pim_product_attribute_form_defaultMetricUnit').select2({
                data: OroApp.measures.getMetricUnits($(this).select2('val'))
            });
        });
        $('#pim_product_attribute_form_metricFamily').trigger('change');

        $('.picker-datetime').datetimepicker();
        $('.picker-date').datetimepicker({ pickTime: false });
        $('.picker-time').datetimepicker({ pickDate: false });

        $('.picker-date, .picker-datetime').on('changeDate', function(e) {
            var val = e.date ? e.date.toISOString() : '';
            $(this).parent().children('input').val(val);
        });

        $('.picker-time').on('changeDate', function(e) {
            var val = '';
            if (e.localDate) {
                var h = e.localDate.getHours();
                var m = e.localDate.getMinutes();
                h = (h > 9) ? h : '0' + h;
                m = (m > 9) ? m : '0' + m;
                val = h + ':' + m;
            }
            $(this).parent().children('input').val(val);
        });
    }

    initializeForm();

    function initializeOptions() {
        $optionList = $('table#sortable_options');
        if (!$optionList.length) {
            return;
        }
        $optionList.after($('<a class="btn btn-small add_option_link" href="#"><i class="icon-plus"></i>{{ 'Add an option'|trans }}</a>'));

        $optionList.find('tr.att-option').each(function() {
            $(this).append($('<td><button type="button" class="btn btn-small action-delete-inline"><i class="icon-remove"></i></button></td>'));
        });

        $(document).on('click', 'a.add_option_link', function(e) {
            e.preventDefault();
            addOption();
        });

        $(document).on('click', 'button.action-delete-inline', function(e) {
            var rows = $optionList.find('tr').length;
            if (rows > 2) {
                $(this).parent().parent().remove();
                if (rows == 3) {
                    $('button.action-delete-inline').hide();
                }
            }
            updateDefaultValueField();
        });

        $('#pim_product_attribute_form_defaultValue').parent().parent().hide();
        $(document).on('change', 'input:radio[name="default_option"]', updateDefaultValueField);

        $optionList.find('.handle input').hide();

        $optionList.find('tbody').sortable({
            handle: '.handle',
            containment: 'parent',
            tolerance: 'pointer',
            update: updateSortOrder,
            helper: function(e, tr) {
                var $originals = tr.children();
                var $helper = tr.clone();
                $helper.children().each(function(index) {
                    $(this).width($originals.eq(index).width());
                });

                return $helper;
            }
        });
    }

    function addOption() {
        var option = $optionList.find('tr').last().html();

        var optionNumber = $optionList.find('tr.att-option').length + 1;

        option = option.replace(/\[options\]\[([0-9]+)\]/g, "[options][" + optionNumber + "]");
        option = option.replace(/_options_([0-9]+)_/g, "_options_" + optionNumber + "_");
        option = option.replace(/\s+/g, ' ');

        var $option = $('<tr class="att-option">' + option + '</tr>');

        // Empty all fields except for locale
        $option.find('input').each(function() {
            if ($(this).attr('name').indexOf('locale') == -1) {
                $(this).removeAttr('value');
            }
        });

        $optionList.find('tbody').append($option);

        $('button.action-delete-inline').show();
        updateSortOrder();
        updateDefaultValueRadio();
    }

    function updateSortOrder() {
        var num = 0;
        $optionList.find('tr').each(function() {
            $(this).find('td.handle input').val(num);
            num++;
        });
    }

    function updateDefaultValueRadio() {
        var defaultValue = $('#pim_product_attribute_form_defaultValue').val();
        if (defaultValue) {
            $('#default_option_' + defaultValue).attr('checked', true);
        }
    }

    function updateDefaultValueField() {
        var $selected = $optionList.find('input:radio[name="default_option"]:checked');

        if (!$selected) {
            $('#pim_product_attribute_form_defaultValue').val('');
            return;
        }

        var value = $selected.attr('id').replace(/^\D+/g, '');
        $('#pim_product_attribute_form_defaultValue').val(value);
    }

    $('#btn-delete-attribute').click(function(event) {
        doAction = function() {
            window.location.href = "{{ path('pim_product_productattribute_remove', { id: form.vars.value.id }) }}";
        };

        if (!_.isUndefined(Backbone.BootstrapModal)) {
            confirm = new Backbone.BootstrapModal({
                title: "{{ 'Delete Confirmation' | trans }}",
                content: "{{ 'Are you sure you want to delete this attribute' | trans }}"
            });
            confirm.on('ok', doAction);
            confirm.open();
        } else if (window.confirm(message)) {
            doAction();
        }
    });
});
