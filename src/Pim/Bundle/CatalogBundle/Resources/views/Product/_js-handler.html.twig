<script type="text/javascript">
    require(
        ['jquery', 'underscore', 'pim/scopable', 'pim/dialog', 'pim/dialogform', 'backbone/bootstrap-modal', 'jquery.currencyfield', 'jquery.select2'],
        function ($, _, Scopable, Dialog, DialogForm) {
            'use strict';
            $(function () {
                _.each($('form div.scopable'), function (field) {
                    new Scopable({ el: $(field) });
                });

                $('form div.currency').currencyField();

                {% if form.enabled is defined %}
                    $('#switch_status').on('click', function () {
                        var $field = $('#{{ form.enabled.vars.id }}'),
                            $status = $('.status-enabled').find('.badge');
                        if (+$field.val()) {
                            $field.val(0).trigger('change');
                            $(this).html('{{ "info.product.enable"|trans }}');
                            $status.html('<i class="icon-status-disabled icon-circle"></i>{{ "info.product.disabled"|trans }}').removeClass('badge-enabled status-enabled').addClass('badge-disabled status-disabled');
                        } else {
                            $field.val(1).trigger('change');
                            $(this).html('{{ "info.product.disable"|trans }}');
                            $status.html('<i class="icon-status-enabled icon-circle"></i>{{ "info.product.enabled"|trans }}').removeClass('badge-disabled status-disabled').addClass('badge-enabled status-enabled');
                        }
                    });
                {% endif %}

                {% if resource_granted('pim_catalog_product_change_family') %}
                    {% set familyWidget %}
                        {{ 'info.product.change family to'|trans }}:
                        {{ form_widget(form.family) }}</br>
                        {{ 'info.product.merge attributes'|trans }}</br>
                        {{ 'info.product.keep attributes'|trans }}
                    {% endset %}

                    var message = '{{ familyWidget|e("js")|raw }}',
                        title   = '{{ "info.product.change family"|trans }}',
                        doAction = function () {
                            $('#{{ form.vars.id }}').append($('#{{ form.family.vars.id }}'));
                            $('#{{ form.vars.id }}').submit();
                        };

                    $('#edit-family').on('click', function () {
                        Dialog.confirm(message, title, doAction);
                        $('#{{ form.family.vars.id }}')
                            .attr('data-placeholder', '{{ "Choose a family"|trans }}')
                            .select2({ allowClear: true });
                    });

                    $('#{{ form.vars.id }}').on('click', 'button[type="submit"]', function () {
                        $('#{{ form.vars.id }}').append($('<div class="hide"/>').html(message));
                    });
                {% endif %}

                {% for group in form.vars.value.groups %}
                    $('#group-products-{{ group.id }}').on('click', function (event) {
                        event.preventDefault();
                        $.get(
                            {{ path('pim_catalog_group_productlist', { id: group.id })|json_encode|raw }},
                            function (content) {
                                var groupDoAction = function () {
                                    var $groupLink = $('<a href="{{ path('pim_catalog_group_edit', { 'id': group.id }) }}" class="hide"></a>');
                                    $groupLink.appendTo($('#{{ form.vars.id }}')).click();
                                };

                                var groupModal = new Backbone.BootstrapModal({
                                    allowCancel: true,
                                    cancelText: '{{ "Close"|trans }}',
                                    title: '{{ "Group"|trans }} {{ group.label }}',
                                    content: content,
                                    okText: '{{ "View group"|trans }}'
                                });

                                groupModal.on('ok', groupDoAction);
                                groupModal.open();
                            }
                        )
                    });
                {% endfor %}

                function setFullHeight() {
                    $('.fullheight').each(function () {
                        $(this).height($('.scrollable-container').height() - $(this).position ().top + $('.scrollable-container').position ().top);
                    });
                }

                $('a[data-toggle="tab"]').on('shown', setFullHeight);
                setFullHeight();

                function copyValue() {
                    $(this).find('textarea, input[type=text], input[type=checkbox], input[type=file], select').each(function() {
                        var $source = $(this);
                        var sourceId = $(this).attr('id');
                        if (!sourceId) {
                            return;
                        }
                        var targetId = sourceId.replace('{{ comparisonLocale}}', '{{ dataLocale }}');
                        var $target = $('#' + targetId);

                        if ($source.is('select') && $source.parent().hasClass('metric')) {
                            $target.get(0).selectize.setValue($source.get(0).selectize.getValue());
                        } else if ($source.is('input[type=checkbox]')) {
                            $target.parent().parent().bootstrapSwitch('setState', $source.is(':checked'));
                        } else if ($source.is('input[type=file]')) {
                            $('#' + targetId.replace(/file$/, 'copyFrom'))
                                .val($('#' + sourceId.replace(/file$/, 'id')).val())
                                .trigger('change');

                            $target.siblings('.upload-info').html(
                                $source.siblings('.upload-info').html()
                            );
                            $target.parent()
                                .find('.remove-upload')
                                .removeClass('hide')
                                .click(function() {
                                    $('#' + targetId.replace(/file$/, 'copyFrom')).removeAttr('value');
                                    $(this).off('click');
                                });
                            ;
                            $target.addClass('hide');
                            $target.parent().removeClass('empty');
                            $target.parent().find('a[rel=slimbox]').slimbox();
                        } else {
                            $target.val($('#' + sourceId).val()).trigger('change');
                        }
                    });
                }

                $('.copy-selection').click(function(event) {
                    event.preventDefault();
                    var selectAll = function() {
                        $('.comparison input.comparisonSelection:not(:checked)').each(function() {
                            $(this).prop('checked', true);
                        });
                    };
                    var selectCurrentTab = function () {
                        $('#attributes .tab-pane.active .comparison input.comparisonSelection:not(:checked)').each(function() {
                            $(this).prop('checked', true);
                        });
                    };
                    var clearSelection = function () {
                        $('.comparison input.comparisonSelection:checked').each(function() {
                            $(this).prop('checked', false);
                        });
                    };

                    switch($(this).data('target')) {
                        case 'all':
                            selectAll();
                            break;

                        case 'current-tab':
                            clearSelection();
                            selectCurrentTab();
                        break;

                        case 'none':
                            clearSelection();
                    }
                });

                $('a#copy-selection').click(function(event) {
                    event.preventDefault();
                    $('.comparison input.comparisonSelection:checked').each(function() {
                        $(this).parent().parent().find('.controls').each(copyValue);
                    });
                });

                // submit form
                $('div.submit-form a').click(function() {
                    var action = $(this).attr('value');
                    $('#pim_product_edit').attr('action', $('#pim_product_edit').attr('action') +"&action="+ action);
                    $('#pim_product_edit').submit();
                });

                {% if createPopin is not null %}
                    // create popin if needed
                    new DialogForm('#create-product');
                    $('#create-product').click();
                {% endif %}
            });
        }
    );
</script>
