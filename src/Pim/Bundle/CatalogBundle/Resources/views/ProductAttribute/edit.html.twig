{% extends 'PimUIBundle::layout.html.twig' %}

{% block title %}Akeneo - {{ "pim.catalog.attribute.title.edit" | trans }}{% endblock %}

{% block content_menu_more %}
    {{ parent() }}
    <li>
        <a href="{{ path('pim_catalog_productattribute_index') }}" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary" role="button">
            <span class="ui-button-icon-primary ui-icon ui-icon-fugue-ui-button-navigation-back"></span>
            <span class="ui-button-text">{{ "bap.navigation.back-list" | trans }}</span>
        </a>
    </li>
    <li>
        <a onclick="return confirm('{{ "bap.dialog.confirm" | trans }}')" href="{{ path('pim_catalog_productattribute_delete', { 'id': entity.id }) }}" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary" role="button">
            <span class="ui-button-icon-primary ui-icon ui-icon-fugue-tag--minus"></span>
            <span class="ui-button-text">{{ "pim.catalog.attribute.button.delete" | trans }}</span>
        </a>
    </li>
    <li>
        <a href="#" onclick="$('#edit-form-submit').click(); return false;" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary" role="button">
            <span class="ui-button-icon-primary ui-icon ui-icon-fugue-disk"></span>
            <span class="ui-button-text">{{ "bap.button.save" | trans }}</span>
        </a>
    </li>
{% endblock %}

{% block content %}

    <h1>{{ "pim.catalog.attribute.title.edit" | trans }}</h1>

    {% form_theme form 'BapUIBundle:Form:fields.html.twig' %}
    <form action="{{ path('pim_catalog_productattribute_update', { 'id': entity.id }) }}" method="post" {{ form_enctype(form) }}>
        {{ form_errors(form) }}

        <div class="form-panel ui-corner-all">
            <h2>{{ "pim.catalog.attribute.fieldset.general" | trans }}</h2>
            {{ form_row(form.id) }}
            {{ form_row(form.code) }}
            {{ form_row(form.title) }}
            {{ form_row(form.type) }}
            {{ form_row(form.scope) }}
            {{ form_row(form.uniqueValue) }}
            {{ form_row(form.valueRequired) }}
            {{ form_row(form.searchable) }}
            {{ form_row(form.translatable) }}
        </div>

        {% if form.type.vars.value == "select" or form.type.vars.value == "multiselect" %}
        <div class="form-panel ui-corner-all">
                <h2>{{ "pim.catalog.attribute.fieldset.option" | trans }}</h2>
                <div>
                    <ul id="sortable-options" class="options" data-prototype="{{ form_widget(form.options.vars.prototype)|e }}" >
                        {% for option in form.options %}
                            <li>{{ form_row(option.id) }} {{ form_row(option.sortOrder) }} {{ form_row(option.value) }}</li>
                        {% endfor %}
                    </ul>
                </div>
        </div>
        {% endif %}

        {{ form_widget(form._token) }}

        <input id="edit-form-submit" type="submit" value="{{ "bap.button.save" | trans }}" class="ui-helper-hidden" role="button" aria-disabled="false">

    </form>

{% endblock %}

{% block afterfooter %}
    {{parent()}}

    <script type="text/javascript">
    // Get the div that holds the collection of options
    var collectionHolder = $('ul.options');

    // setup an "add an option" link
    var $addOptionLink = $('<a href="#" class="add_option_link">Add an option</a>');
    var $newLinkLi = $('<li class="not-sortable"></li>').append($addOptionLink);

    jQuery(document).ready(function() {
        // add a delete link to all of the existing option form li elements
        collectionHolder.find('li').each(function() {
            addOptionFormDeleteLink($(this));
        });

        // add the "add a option" anchor and li to the options ul
        collectionHolder.append($newLinkLi);

        $addOptionLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addOptionForm(collectionHolder, $newLinkLi);
        });
    });

    function addOptionForm(collectionHolder, $newLinkLi) {
        // Get the data-prototype we explained earlier
        var prototype = collectionHolder.attr('data-prototype');

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on the current collection's length.
        var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Display the form in the page in an li, before the "Add an option" link li
        var $newFormLi = $('<li></li>').append(newForm);
        $newLinkLi.before($newFormLi);

        // define option order for new one
        resetOptionsOrder();

        // add a delete link to the new form
        addOptionFormDeleteLink($newFormLi);
    }

    function addOptionFormDeleteLink($optFormLi) {

        var $moveFormA = $('<span class="action-drag-inline">Sort</span>');
        $optFormLi.append($moveFormA);

        var $removeFormA = $('<a class="action-delete-inline" href="#">Delete</a>');
        $optFormLi.append($removeFormA);
        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $optFormLi.remove();
        });
    }

    // make options sortable
    $("#sortable-options").sortable({
        cancel: ":input, button, a, .not-sortable",
        update: function () { resetOptionsOrder(); }
    });
    $( "#sortable" ).disableSelection();

    /* add sort order each time we add or move an option */
    function resetOptionsOrder() {
        var indOpt = 1;
        $("#sortable-options input.sort-order").each(function(index) {
            var input = $(this);
            input.val(index);
        });
    }

</script>
{% endblock %}
