{% extends 'PimProductBundle::layout.html.twig' %}

{% set title = 'Classification tree overview'|trans %}

{% block head_script %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('bundles/oroui/lib/jstree/jquery.cookie.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/oroui/lib/jstree/jquery.hotkeys.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/oroui/lib/jstree/jquery.jstree.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/oroui/lib/jstree/jquery.jstree.tree_selector.js') }}"></script>
    
{% endblock %}

{% block content %}
    <div class="row-fluid has-resizable-sidebar">
        <div class="resizable-sidebar" width="250">
            <div id="tree_menu">
                <div class="text-center">
                    <button id="tree-create" class="btn btn-small"><i class="icon-plus"></i></button>
                    <button id="tree-edit" class="btn btn-small"><i class="icon-edit"></i></button>
                </div>
    
                <div id="tree"></div>
                
                <div class="text-center">
                    <hr />
                    <button id="segment-create" class="btn btn-small"><i class="icon-plus"></i></button>
                    <button id="segment-edit" class="btn btn-small"><i class="icon-edit"></i></button>
                    <button id="segment-duplicate" class="btn btn-small"><i class="icon-copy"></i></button>
                    <button id="segment-remove" class="btn btn-small"><i class="icon-trash"></i></button>
                    <hr />
                    <button id="refresh" class="btn btn-small"><i class="icon-refresh"></i></button>
                </div>
            </div>
        </div>
        
        <div id="form-tab" class="resizable-content">
            <h3>{{ title }}</h3>
            
            <div id="list">
                <table id="product_grid" border="1"></table>
            </div>
        </div>
    </div>
    
    <script type="text/javascript">
        var assetsPath = "{{ asset('bundles/pimproduct/') }}";
    </script>
    <script type="text/javascript" src="{{ asset('bundles/pimproduct/js/classificationtree.jstree.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/oroui/lib/backbone.bootstrap-modal.js') }}"></script>
    <script type="text/javascript">
$(function () {
    $("#tree_menu button").click(function () {
        var tree_id = "#tree";
        console.log(this.id);
        switch(this.id) {
            case "tree-create":
                window.location = "{{ path('pim_product_classificationtree_create') }}";
                break;
            case "segment-create":
                var node = $.jstree._focused().get_selected();
                if (node.length != 0) {
                    var parentId = node.attr("id").replace('node_', '');
                    window.location = "{{ path('pim_product_classificationtree_create') }}/"+parentId;
                } else {
                    //TODO : Window with Oro
                    window.alert('You must select a parent node');
                }
                break;
            case "tree-edit":
                var treeId = $.jstree._focused().get_tree_id();
                window.location = "{{ path('pim_product_classificationtree_edit') }}/"+treeId;
                break;
            case "segment-edit":
                var node = $.jstree._focused().get_selected();
                if (node.length != 0) {
                    var segmentId = node.attr("id").replace('node_', '');
                    window.location = "{{ path('pim_product_classificationtree_edit') }}/"+segmentId;
                } else {
                    //TODO : Window with Oro
                    window.alert('You must select a parent node');
                }
                break;
            case "segment-duplicate":
                console.log("segment duplicate");
                
                break;
            case "segment-remove":
                if ($.jstree._focused()._get_parent() == -1) {
                    var alert = new Backbone.BootstrapModal({
                        allowCancel: false,
                        title: "{{ 'Alert message' | trans }}",
                        content: "{{ 'Impossible to delete root node' | trans }}"
                    });
                    alert.open();
                    return;
                }
                doRemove = function() {
                    $(tree_id).jstree("remove")
                };
                if (!_.isUndefined(Backbone.BootstrapModal)) {
                    var confirm = new Backbone.BootstrapModal({
                        title: "{{ 'Delete Confirmation' | trans }}",
                        content: "{{ 'Are you sure you want to delete this item' | trans }}"
                    });
                    confirm.on('ok', doRemove);
                    confirm.open();
                } else {
                    doRemove();
                }
                break;
            case "refresh":
                console.log('refresh');
//                $(tree_id).jstree('refresh',-1);
                break;
//            case "add":
//                console.log('add');
//                $(tree_id).jstree("create", null, "last", { "attr" : { "rel" : this.id.toString().replace("add_", "") } });
//                break;
            case "search":
                console.log('search');
//                $(tree_id).jstree("search", $("#search_text").val());
                break;
            case "clear-search":
                console.log('clear search');
//                $(tree_id).jstree("clear_search");
                break;
//            case "rename":
//                console.log('rename');
////                $(tree_id).jstree("rename");
//                break;
//            case "add-item":
//                console.log('add item');
//                node = $.jstree._focused().get_selected();
//                segmentId = node.attr('id').replace('node_','');
//                itemId = $("#add_item_id").val();
//
//                $.fn.addItem(segmentId, itemId);
//                break;
//            case "remove-item":
//                console.log('remove item');
//                node = $.jstree._focused().get_selected();
//                segmentId = node.attr('id').replace('node_','');
//                itemId = $("#remove_item_id").val();
//
//                $.fn.removeItem(segmentId, itemId);
//                break;
        }
   });
});
    </script>
{% endblock %}
